version: "3"

services:
  carsharing_app:
    container_name: carsharing_app
    image: carsharing_app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - /home/ubuntu/applications/SECRETS/car_sharing/server/.env
    networks:
      - common-network
    ports:
      - 3001:3001
    external_links:
      - reverse-proxy

  postgres:
    container_name: postgres
    image: postgis/postgis
    restart: always
    expose:
      - "5432"
    volumes:
      - /home/ubuntu/applications/BACKUPS/car_sharing/:/backup
      - ./postgres-init-db.sh:/docker-entrypoint-initdb.d/postgres-init-db.sh
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - /home/ubuntu/applications/SECRETS/car_sharing/.env.prod.postgres
    networks:
      - common-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - common-network


# # replaced by external reverse-proxy docker-compose file
#  nginx:
#    image: nginx:1.20.1
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro #  the final ro declares that the volume will be read-only
#    ports:
#      - 8080:80
#    container_name: reverse-proxy


volumes:
  postgres_data:

networks:
  common-network:
    external:
      name: common-network  # must match the actual name of the network created in the external file
























