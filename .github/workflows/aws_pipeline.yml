name: AWS pipeline

on:
  push:
    branches:
      - master # change to master
  pull_request:
    branches: [ master ]  # change to master
    types: [ opened, synchronize ] #    will run on pull request

jobs:
  aws_deployment_pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2  # (checks out project source code from git)
      - uses: actions/setup-node@v1
        with:
          node-version: '14.15.x'
      - name: install root dependencies  # uses postinstall
        run: npm install
      - name: lint
        run: npm run lint
      - name: build
        run: npm run build
      - name: test
        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          JWT_KEY: ${{secrets.JWT_KEY}}
        run: npm run test
      - name: e2e tests
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}},
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}},
          AWS_REGION: ${{secrets.AWS_REGION}},
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          JWT_KEY: ${{secrets.JWT_KEY}}
          CYPRESS_baseUrl: http://localhost:3001  # overrides cypress.json bc frontend is built and running from the server in as in production on port 3001 instead of 3000
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          start: npm run start
          wait-on: http://localhost:3001

# make two separate workflows sequential:
# https://stackoverflow.com/questions/62750603/github-actions-trigger-another-action-after-one-action-is-completed
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create CodeDeploy Deployment
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip')}}  # runs only on push to master or pull_request merge with master, skips when message contains #skip
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name Git_Application \
            --deployment-group-name development_gropup \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
#          healthcheck: "https://p2p-car-sharing.herokuapp.com/api/health"
#          checkstring: "ok"
#          rollbackonhealthcheckfailed: true



