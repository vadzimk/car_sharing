workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always


stages:
  - install
  - lint
  - unit-test
  - build-client
  - e2e-test
  - build-server
  - deploy

instal_cypress_dependencies:
  stage: install
  image: node:16.13.0
  script:
    - export CYPRESS_CACHE_FOLDER=$CI_PROJECT_DIR/.cache/Cypress
    - export DEBUG=cypress:cli
    - npm ci --cache .npm --prefer-offline --ignore-scripts
    key: DEP-CY-$CI_COMMIT_REF_SLUG # separate key fro dependencies
    paths:
      - .cache/Cypress
    policy: push
#  only: # TODO trigger to produce cache
#    changes:
#      - package-lock.json

install_server_dependencies:
  stage: install
  image: node:16.13.0
  script:
    - cd server
    - npm ci --cache .npm --prefer-offline
  cache:
    key: DEP-S-$CI_COMMIT_REF_SLUG # separate key for dependencies
    paths:
      - server/node_modules
      - server/.npm/
    policy: push
#  only: # TODO trigger to produce cache
#    changes:
#      - server/package-lock.json


install_client_dependencies:
  stage: install
  image: node:16.13.0
  script:
    - cd client
    - npm ci --cache .npm --prefer-offline
  cache:
    key: DEP-C-$CI_COMMIT_REF_SLUG # separate key for dependencies
    paths:
      - client/node_modules
      - client/.npm/
    policy: push
#  only: # TODO trigger to produce cache
#    changes:
#      - client/package-lock.json


run_lint_server:
  stage: lint
  image: node:16.13.0
  needs:
    - install_server_dependencies
  script:
    - cd server
    - npm run lint
  cache:
    key: DEP-S-$CI_COMMIT_REF_SLUG # separate key for dependencies
    paths:
      - server/node_modules
      - server/.npm/
    policy: pull


run_lint_client:
  stage: lint
  image: node:16.13.0
  needs:
    - install_client_dependencies
  script:
    - cd client
    - npm run lint
  cache:
    key: DEP-C-$CI_COMMIT_REF_SLUG # separate key for dependencies
    paths:
      - client/node_modules
      - client/.npm/
    policy: pull


.use_server_secrets:
  before_script:
    - set -o allexport
    - source $SERVER_ENV
    - source $POSTGRES_ENV
    - set +o allexport
    - mkdir -p server/.oci
    - cat $OCI_CONFIG > server/.oci/config
    - echo -e "\nkey_file=$CI_PROJECT_DIR/server/.oci/carshare_key.pem" >> server/.oci/config
    - cat $CARSHARE_KEY > server/.oci/carshare_key.pem
    - chmod 400 server/.oci/carshare_key.pem


run_unit_tests_server:
  stage: unit-test
  image: node:16.13.0
  needs:
    - install_server_dependencies
  extends:
    - .use_server_secrets
  script:
    - cd server
    - npm run test:ci
  cache:
    key: DEP-S-$CI_COMMIT_REF_SLUG # separate key fro dependencies
    paths:
      - server/node_modules
      - server/.npm/
    policy: pull
  artifacts:
    when: always
    reports:
      junit: server/junit.xml



build_react:
  stage: build-client
  image: node:16.13.0
  needs:
    - run_lint_client
  script:
    - cd client
    - npm run build
  cache:
    - key: DEP-C-$CI_COMMIT_REF_SLUG # separate key fro dependencies
      paths:
        - client/node_modules
        - client/.npm/
      policy: pull
    - key: BUILD-C-$CI_COMMIT_REF_SLUG # separate key fro dependencies
      paths:
        - client/build
      policy: push


run_e2e_tests:
  stage: e2e-test
  image: node:16.13.0
  script:
    - export CYPRESS_baseUrl=http://localhost:3001  # overrides cypress.json bc frontend is built and running from the server in as in production on port 3001 instead of 3000
    - export CYPRESS_CACHE_FOLDER=$CI_PROJECT_DIR/.cache/Cypress
    - export DEBUG=cypress:cli
    - npm run start & wait-on http://localhost:3000
    - export NODE_ENV=test ELECTRON_RUN_AS_NODE=1  #https://docs.cypress.io/guides/continuous-integration/introduction#Running-headless-tests-without-Xvfb
    - $(npm bin)/cypress run --headless --browser firefox
  artifacts:
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 week