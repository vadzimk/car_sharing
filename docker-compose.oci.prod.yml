version: "3.5"

networks:
  common_network:
    external:
      name: common_network  # must match the actual name of the network created in the external file

secrets:
  oci_private_key:
    file: ./.oci/carshare_key.pem
  oci_config:
    file: ./.oci/config

services:
  carshare:
    container_name: carshare
    image: ${DC_IMAGE_NAME}:${DC_IMAGE_TAG}
    restart: always
    networks:
      - common_network
#    ports:
#      - 3001:3001
    expose:
      - 3001
    environment:
      - JWT_KEY=${JWT_KEY}
      - DATABASE_URL_PRODUCTION=${DATABASE_URL_PRODUCTION}
      - DATABASE_URL_TEST=${DATABASE_URL_TEST}
#      - OCI_NAMESPACE=${OCI_NAMESPACE}
#      - OCI_BUCKET=${OCI_BUCKET}
#      - OCI_CLI_USER=${OCI_CLI_USER}
#      - OCI_CLI_FINGERPRINT=${OCI_CLI_FINGERPRINT}
#      - OCI_CLI_KEY_FILE=${OCI_CLI_KEY_FILE}
#      - OCI_CLI_TENANCY=${OCI_CLI_TENANCY}
#      - OCI_COMPARTMENT=${OCI_COMPARTMENT}
#    volumes:
#      - ./.oci:/usr/src/app/server/.oci
    secrets:
      - source: oci_private_key
        target: carshare_key.pem
        mode: 0400
      - source: oci_config
        target: config
        mode: 0400

  postgres:
    container_name: postgres
    image: postgis/postgis
    restart: always
    networks:
      - common_network
#    ports:
#      - 5432:5432
    expose:
      - 5432
    volumes:
      - ./backup:/backup
      - ./postgres-init-db.sh:/docker-entrypoint-initdb.d/postgres-init-db.sh
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - common_network


volumes:
  postgres_data:



